{"version":3,"sources":["components/SearchGif.jsx","components/GifItem.jsx","components/GifGrid.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchGif","setCategory","category","useState","name","setName","onSubmit","e","preventDefault","className","type","onChange","value","target","placeholder","GifItem","url","title","id","src","alt","GifGrid","el","gifs","setGifs","getGif","gifName","a","encodeURI","fetch","res","json","results","console","log","map","gif","media","useEffect","then","data","App","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MA8BeA,EA5BG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAChC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAWA,OACE,sBAAMC,SANa,SAACC,GACpBA,EAAEC,iBACFH,EAAQ,IACRJ,EAAY,CAACG,GAAF,mBAAWF,MAGtB,SACE,qBAAKO,UAAU,gBAAf,SACE,uBACEC,KAAK,OACLC,SAdkB,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MACrCP,EAAQO,IAcFH,UAAU,kPACVL,KAAK,OACLQ,MAAOR,EACPU,YAAY,kB,+BCZPC,EATC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAE7B,OACE,iCACE,qBAAKC,IAAKH,EAAKI,IAAKH,EAAOR,UAAU,uBAA2BS,MCkCvDG,EArCC,SAAC,GAAY,IAAVC,EAAS,EAATA,GACjB,EAAwBnB,mBAAS,IAAjC,mBAAOoB,EAAP,KAAaC,EAAb,KAIMC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACPX,EADO,4CAFC,eAED,sBACyDY,UACpEF,IAFW,SAIKG,MAAMb,GAJX,cAIPc,EAJO,gBAKaA,EAAIC,OALjB,uBAKLC,EALK,EAKLA,QACRC,QAAQC,IAAIF,GAENT,EAAOS,EAAQG,KAAI,SAACC,GACxB,MAAO,CACLnB,MAAOmB,EAAInB,MACXD,IAAKoB,EAAIC,MAAM,GAAGD,IAAIpB,IACtBE,GAAIkB,EAAIlB,OAZC,kBAgBNK,GAhBM,4CAAH,sDAuBZ,OAJAe,qBAAU,WACRb,EAAOH,GAAIiB,MAAK,SAACC,GAAD,OAAUhB,EAAQgB,QACjC,CAAClB,IAGF,yBAASb,UAAU,sFAAnB,SACGc,EAAKY,KAAI,SAACC,GACT,OAAO,cAAC,EAAD,eAAaA,UCLbK,G,MAxBH,WACV,MAAgCtC,mBAAS,CAAC,gBAA1C,mBAAOD,EAAP,KAAiBD,EAAjB,KACA,OACE,qCACE,yBAAQQ,UAAU,SAAlB,2BACiB,IACf,mBAAGA,UAAU,OAAOI,OAAO,SAAS6B,KAAK,uBAAzC,qBAEK,IAJP,MAKM,IACJ,mBAAGjC,UAAU,OAAOI,OAAO,SAAS6B,KAAK,uBAAzC,wBAIF,cAAC,EAAD,CAAWzC,YAAaA,EAAaC,SAAUA,IAC/C,+BACGA,EAASiC,KAAI,SAACb,GACb,OAAO,cAAC,EAAD,CAASA,GAAIA,cCVfqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6099f2ac.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst SearchGif = ({ setCategory, category }) => {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleInputChange = ({ target: { value } }) => {\r\n    setName(value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setName(\"\");\r\n    setCategory([name, ...category]);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"relative px-4\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={handleInputChange}\r\n          className=\"flex-1 block w-full px-4 py-2 mx-auto text-base text-gray-100 placeholder-gray-400 bg-gray-900 border-transparent rounded-lg shadow-sm appearance-none sm:w-2/5 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent \"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"Your Gif\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchGif;\r\n","import React from \"react\";\r\n\r\nconst GifItem = ({ url, title, id }) => {\r\n  //   console.log(url);\r\n  return (\r\n    <figure>\r\n      <img src={url} alt={title} className=\"mx-auto rounded-2xl\" key={id} />\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default GifItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport GifItem from \"./GifItem\";\r\n\r\nconst GifGrid = ({ el }) => {\r\n  const [gifs, setGifs] = useState([]);\r\n\r\n  const KEY_API = \"INBYS428FGU4\";\r\n\r\n  const getGif = async (gifName) => {\r\n    const url = `https://g.tenor.com/v1/search?key=${KEY_API}&limit=9&q=${encodeURI(\r\n      gifName\r\n    )}`;\r\n    const res = await fetch(url);\r\n    const { results } = await res.json();\r\n    console.log(results);\r\n\r\n    const gifs = results.map((gif) => {\r\n      return {\r\n        title: gif.title,\r\n        url: gif.media[0].gif.url,\r\n        id: gif.id,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGif(el).then((data) => setGifs(data));\r\n  }, [el]);\r\n\r\n  return (\r\n    <section className=\"grid grid-cols-1 gap-2 m-2 sm:grid-cols-2 lg:grid-cols-3 sm:gap-4 sm:mx-24 sm:my-8 \">\r\n      {gifs.map((gif) => {\r\n        return <GifItem {...gif} />;\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import React, { useState } from \"react\";\nimport SearchGif from \"./components/SearchGif\";\nimport GifGrid from \"./components/GifGrid\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [category, setCategory] = useState([\"programming\"]);\n  return (\n    <>\n      <header className=\"header\">\n        App De Gifs By{\" \"}\n        <a className=\"link\" target=\"_blank\" href=\"https://t.me/arcodez\">\n          Arcodez\n        </a>{\" \"}\n        and{\" \"}\n        <a className=\"link\" target=\"_blank\" href=\"https://t.me/plumede\">\n          Plumede\n        </a>\n      </header>\n      <SearchGif setCategory={setCategory} category={category} />\n      <main>\n        {category.map((el) => {\n          return <GifGrid el={el} />;\n        })}\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}